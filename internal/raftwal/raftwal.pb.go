// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v3.19.6
// source: internal/raftwal/raftwal.proto

package raftwal

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// EntryKind represents the high-level kind of raft log entry.
type EntryKind int32

const (
	EntryKind_ENTRY_NORMAL      EntryKind = 0 // application command
	EntryKind_ENTRY_CONF_CHANGE EntryKind = 1 // raft configuration change
	EntryKind_ENTRY_NOOP        EntryKind = 2 // leadership no-op / barrier
	EntryKind_ENTRY_HARDSTATE   EntryKind = 3 // persisted raft hardstate snapshot (optional usage)
)

// Enum value maps for EntryKind.
var (
	EntryKind_name = map[int32]string{
		0: "ENTRY_NORMAL",
		1: "ENTRY_CONF_CHANGE",
		2: "ENTRY_NOOP",
		3: "ENTRY_HARDSTATE",
	}
	EntryKind_value = map[string]int32{
		"ENTRY_NORMAL":      0,
		"ENTRY_CONF_CHANGE": 1,
		"ENTRY_NOOP":        2,
		"ENTRY_HARDSTATE":   3,
	}
)

func (x EntryKind) Enum() *EntryKind {
	p := new(EntryKind)
	*p = x
	return p
}

func (x EntryKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EntryKind) Descriptor() protoreflect.EnumDescriptor {
	return file_internal_raftwal_raftwal_proto_enumTypes[0].Descriptor()
}

func (EntryKind) Type() protoreflect.EnumType {
	return &file_internal_raftwal_raftwal_proto_enumTypes[0]
}

func (x EntryKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EntryKind.Descriptor instead.
func (EntryKind) EnumDescriptor() ([]byte, []int) {
	return file_internal_raftwal_raftwal_proto_rawDescGZIP(), []int{0}
}

// AppCommand is the application-level command replicated via raft.
type AppCommand struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BucketId      string                 `protobuf:"bytes,1,opt,name=bucket_id,json=bucketId,proto3" json:"bucket_id,omitempty"`     // logical shard/bucket identifier
	Cmd           string                 `protobuf:"bytes,2,opt,name=cmd,proto3" json:"cmd,omitempty"`                               // command verb
	Args          []string               `protobuf:"bytes,3,rep,name=args,proto3" json:"args,omitempty"`                             // arguments
	ClientId      uint64                 `protobuf:"varint,4,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`    // optional client identifier
	RequestId     uint64                 `protobuf:"varint,5,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"` // optional request identifier for de-duplication
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppCommand) Reset() {
	*x = AppCommand{}
	mi := &file_internal_raftwal_raftwal_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppCommand) ProtoMessage() {}

func (x *AppCommand) ProtoReflect() protoreflect.Message {
	mi := &file_internal_raftwal_raftwal_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppCommand.ProtoReflect.Descriptor instead.
func (*AppCommand) Descriptor() ([]byte, []int) {
	return file_internal_raftwal_raftwal_proto_rawDescGZIP(), []int{0}
}

func (x *AppCommand) GetBucketId() string {
	if x != nil {
		return x.BucketId
	}
	return ""
}

func (x *AppCommand) GetCmd() string {
	if x != nil {
		return x.Cmd
	}
	return ""
}

func (x *AppCommand) GetArgs() []string {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *AppCommand) GetClientId() uint64 {
	if x != nil {
		return x.ClientId
	}
	return 0
}

func (x *AppCommand) GetRequestId() uint64 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

// Envelope is the canonical WAL record payload for raft-backed replication.
// It is framed externally by a physical header (crc32,size) at the WAL layer.
type Envelope struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RaftIndex     uint64                 `protobuf:"varint,1,opt,name=raft_index,json=raftIndex,proto3" json:"raft_index,omitempty"` // raft log index
	RaftTerm      uint64                 `protobuf:"varint,2,opt,name=raft_term,json=raftTerm,proto3" json:"raft_term,omitempty"`    // raft term
	Kind          EntryKind              `protobuf:"varint,3,opt,name=kind,proto3,enum=raftwal.EntryKind" json:"kind,omitempty"`     // kind of entry
	AppBytes      []byte                 `protobuf:"bytes,4,opt,name=app_bytes,json=appBytes,proto3" json:"app_bytes,omitempty"`     // serialized AppCommand or raft ConfChange / HardState
	AppCrc        uint32                 `protobuf:"varint,5,opt,name=app_crc,json=appCrc,proto3" json:"app_crc,omitempty"`          // crc32 over app_bytes (logical CRC)
	Flags         uint32                 `protobuf:"varint,6,opt,name=flags,proto3" json:"flags,omitempty"`                          // reserved bitmask for future use
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Envelope) Reset() {
	*x = Envelope{}
	mi := &file_internal_raftwal_raftwal_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Envelope) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Envelope) ProtoMessage() {}

func (x *Envelope) ProtoReflect() protoreflect.Message {
	mi := &file_internal_raftwal_raftwal_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Envelope.ProtoReflect.Descriptor instead.
func (*Envelope) Descriptor() ([]byte, []int) {
	return file_internal_raftwal_raftwal_proto_rawDescGZIP(), []int{1}
}

func (x *Envelope) GetRaftIndex() uint64 {
	if x != nil {
		return x.RaftIndex
	}
	return 0
}

func (x *Envelope) GetRaftTerm() uint64 {
	if x != nil {
		return x.RaftTerm
	}
	return 0
}

func (x *Envelope) GetKind() EntryKind {
	if x != nil {
		return x.Kind
	}
	return EntryKind_ENTRY_NORMAL
}

func (x *Envelope) GetAppBytes() []byte {
	if x != nil {
		return x.AppBytes
	}
	return nil
}

func (x *Envelope) GetAppCrc() uint32 {
	if x != nil {
		return x.AppCrc
	}
	return 0
}

func (x *Envelope) GetFlags() uint32 {
	if x != nil {
		return x.Flags
	}
	return 0
}

var File_internal_raftwal_raftwal_proto protoreflect.FileDescriptor

const file_internal_raftwal_raftwal_proto_rawDesc = "" +
	"\n" +
	"\x1einternal/raftwal/raftwal.proto\x12\araftwal\"\x8b\x01\n" +
	"\n" +
	"AppCommand\x12\x1b\n" +
	"\tbucket_id\x18\x01 \x01(\tR\bbucketId\x12\x10\n" +
	"\x03cmd\x18\x02 \x01(\tR\x03cmd\x12\x12\n" +
	"\x04args\x18\x03 \x03(\tR\x04args\x12\x1b\n" +
	"\tclient_id\x18\x04 \x01(\x04R\bclientId\x12\x1d\n" +
	"\n" +
	"request_id\x18\x05 \x01(\x04R\trequestId\"\xba\x01\n" +
	"\bEnvelope\x12\x1d\n" +
	"\n" +
	"raft_index\x18\x01 \x01(\x04R\traftIndex\x12\x1b\n" +
	"\traft_term\x18\x02 \x01(\x04R\braftTerm\x12&\n" +
	"\x04kind\x18\x03 \x01(\x0e2\x12.raftwal.EntryKindR\x04kind\x12\x1b\n" +
	"\tapp_bytes\x18\x04 \x01(\fR\bappBytes\x12\x17\n" +
	"\aapp_crc\x18\x05 \x01(\rR\x06appCrc\x12\x14\n" +
	"\x05flags\x18\x06 \x01(\rR\x05flags*Y\n" +
	"\tEntryKind\x12\x10\n" +
	"\fENTRY_NORMAL\x10\x00\x12\x15\n" +
	"\x11ENTRY_CONF_CHANGE\x10\x01\x12\x0e\n" +
	"\n" +
	"ENTRY_NOOP\x10\x02\x12\x13\n" +
	"\x0fENTRY_HARDSTATE\x10\x03B;Z9github.com/sevenDatabase/SevenDB/internal/raftwal;raftwalb\x06proto3"

var (
	file_internal_raftwal_raftwal_proto_rawDescOnce sync.Once
	file_internal_raftwal_raftwal_proto_rawDescData []byte
)

func file_internal_raftwal_raftwal_proto_rawDescGZIP() []byte {
	file_internal_raftwal_raftwal_proto_rawDescOnce.Do(func() {
		file_internal_raftwal_raftwal_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_internal_raftwal_raftwal_proto_rawDesc), len(file_internal_raftwal_raftwal_proto_rawDesc)))
	})
	return file_internal_raftwal_raftwal_proto_rawDescData
}

var file_internal_raftwal_raftwal_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_internal_raftwal_raftwal_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_internal_raftwal_raftwal_proto_goTypes = []any{
	(EntryKind)(0),     // 0: raftwal.EntryKind
	(*AppCommand)(nil), // 1: raftwal.AppCommand
	(*Envelope)(nil),   // 2: raftwal.Envelope
}
var file_internal_raftwal_raftwal_proto_depIdxs = []int32{
	0, // 0: raftwal.Envelope.kind:type_name -> raftwal.EntryKind
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_internal_raftwal_raftwal_proto_init() }
func file_internal_raftwal_raftwal_proto_init() {
	if File_internal_raftwal_raftwal_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_internal_raftwal_raftwal_proto_rawDesc), len(file_internal_raftwal_raftwal_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_internal_raftwal_raftwal_proto_goTypes,
		DependencyIndexes: file_internal_raftwal_raftwal_proto_depIdxs,
		EnumInfos:         file_internal_raftwal_raftwal_proto_enumTypes,
		MessageInfos:      file_internal_raftwal_raftwal_proto_msgTypes,
	}.Build()
	File_internal_raftwal_raftwal_proto = out.File
	file_internal_raftwal_raftwal_proto_goTypes = nil
	file_internal_raftwal_raftwal_proto_depIdxs = nil
}
